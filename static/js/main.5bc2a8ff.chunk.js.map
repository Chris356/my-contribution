{"version":3,"sources":["assets/imgs/undraw_page_not_found_su7k.svg","assets/imgs/undraw_version_control_9bpv.svg","components/Errors/UnknownPath.jsx","components/Main/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","UnknownPath","className","src","errorIMG","alt","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","main_body_section","marginTop","justifyContent","display","marginBottom","main_img_container","position","width","breakpoints","only","fontSize","main_intro_text","top","main_intro_img","sectionTitle_main_content","backgroundColor","main_content_title","padding","color","Main","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","aria-controls","aria-haspopup","onClick","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","introIMG","App","console","log","process","exact","path","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,wD,mBCA3CD,EAAOC,QAAU,IAA0B,yD,0PCa5BC,EATK,WAChB,OACE,yBAAKC,UAAU,uBACV,yBAAKC,IAAKC,IAAUC,IAAI,cACxB,gF,mICKLC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,IAE/BC,MAAO,CACHJ,SAAU,GAEdK,kBAAmB,CACfC,UAAW,KACXC,eAAgB,SAChBC,QAAS,OACTC,aAAc,QAElBC,mBAAmB,aAAEC,SAAU,WAAYH,QAAS,OAAQD,eAAgB,SAAUK,MAAO,OAAQd,EAAMe,YAAYC,KAAK,MAAQ,CAChIC,SAAU,QACVH,MAAO,QAEXI,gBAAiB,CAAEL,SAAU,WAAYM,IAAK,OAC9CC,eAAgB,CACZN,MAAO,QAEXO,0BAA2B,CACvBP,MAAO,OACPQ,gBAAiB,WAErBC,mBAAoB,CAChBC,QAAS,OACTC,MAAO,aAIA,SAASC,IACpB,IAAMC,EAAU7B,IADW,EAGK8B,IAAMC,SAAS,MAHpB,mBAGpBC,EAHoB,KAGVC,EAHU,KAIrBC,EAAOC,QAAQH,GAMfI,EAAc,WAChBH,EAAY,OAGhB,OACI,yBAAKrC,UAAWiC,EAAQ1B,MACpB,kBAACkC,EAAA,EAAD,CAAQtB,SAAS,UACb,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQ5C,UAAWiC,EAAQxB,WAAYsB,MAAM,UAAUc,aAAW,QAC/E,kBAAC,IAAD,OAEJ,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAK/C,UAAWiC,EAAQrB,OAA5C,mBAII,6BACI,kBAAC+B,EAAA,EAAD,CACIE,aAAW,0BACXG,gBAAc,cACdC,gBAAc,OACdC,QAxBT,SAAAC,GACfd,EAAYc,EAAMC,gBAwBMrB,MAAM,WAEN,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CACIsB,GAAG,cACHjB,SAAUA,EACVkB,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,aAAW,EACXC,gBAAiB,CACbH,SAAU,MACVC,WAAY,SAEhBlB,KAAMA,EACNqB,QAASnB,GAET,kBAACoB,EAAA,EAAD,CAAUV,QAASV,GAAnB,WACA,kBAACoB,EAAA,EAAD,CAAUV,QAASV,GAAnB,kBAMpB,6BAASxC,UAAWiC,EAAQpB,mBACxB,yBAAKwC,GAAG,yBAAyBrD,UAAWiC,EAAQf,oBAChD,yBAAKmC,GAAG,iBAAiBrD,UAAWiC,EAAQP,eAAgBzB,IAAK4D,IAAU1D,IAAI,mBAC/E,wBAAIH,UAAWiC,EAAQT,iBAAvB,4DAGR,iCACI,yBAAKxB,UAAWiC,EAAQN,2BACR,wBAAI3B,UAAWiC,EAAQJ,oBAAvB,2BCtFjBiC,MAhBf,WAEE,OADAC,QAAQC,IAAIC,oBAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,KACnB,kBAACnC,EAAD,OAEA,kBAAC,IAAD,CAAQmC,KAAM,MACd,kBAAC,EAAD,UCPY5B,QACW,cAA7B6B,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpB,QAAQoB,MAAMA,EAAMC,c","file":"static/js/main.5bc2a8ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_page_not_found_su7k.6695af99.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_version_control_9bpv.bd6fb7a3.svg\";","import React from 'react';\nimport \"./errors.css\"\nimport errorIMG from \"../../assets/imgs/undraw_page_not_found_su7k.svg\"\n\nconst UnknownPath = () => {\n    return (\n      <div className=\"page_not_Found_main\">\n           <img src={errorIMG} alt=\"wrongPage\" />\n           <h2>OUPS ! La page que tu recherche n'existe pas !</h2>\n      </div>\n    );\n}\n\nexport default UnknownPath;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport \"./main.css\"\nimport introIMG from \"../../assets/imgs/undraw_version_control_9bpv.svg\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    main_body_section: {\n        marginTop: \"5%\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        marginBottom: \"30px\"\n    },\n    main_img_container: {position: \"relative\", display: \"flex\", justifyContent: \"center\", width: \"30%\", [theme.breakpoints.only('xs')]: {\n        fontSize: \"0.9em\",\n        width: \"70%\"\n      }, },\n    main_intro_text: { position: \"absolute\", top: \"25%\" },\n    main_intro_img: {\n        width: \"100%\"\n    },\n    sectionTitle_main_content: {\n        width: \"100%\",\n        backgroundColor: \"#3F51B5\"\n    },\n    main_content_title: {\n        padding: \"10px\",\n        color: \"white\"\n    }\n}));\n\nexport default function Main() {\n    const classes = useStyles();\n    const auth = true\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    \n    const handleMenu = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        My contribution\n          </Typography>\n                    {auth && (\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <AccountCircle />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={open}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\n                            </Menu>\n                        </div>\n                    )}\n                </Toolbar>\n            </AppBar>\n            <section className={classes.main_body_section}>\n                <div id=\"main_div_img_container\" className={classes.main_img_container}>\n                    <img id=\"main_intro_img\" className={classes.main_intro_img} src={introIMG} alt=\"versioning-img\" />\n                    <h2 className={classes.main_intro_text}>Ne cherchez plus de projets, vous venez de les trouver</h2>\n                </div>\n            </section>\n            <section>\n                <div className={classes.sectionTitle_main_content}>\n                                <h2 className={classes.main_content_title}>Open source projects</h2>\n                </div>\n                \n            </section>\n        </div>);\n}","import React from 'react';\nimport './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport UnknownPath from './components/Errors/UnknownPath';\nimport Main from './components/Main/Main';\n\nfunction App() {\n  console.log(process.env.PUBLIC_URL)\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={\"/\"}>\n        <Main />\n        </Route>\n        <Route  path={\"/*\"}>\n        <UnknownPath />\n        </Route>\n      </Switch>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
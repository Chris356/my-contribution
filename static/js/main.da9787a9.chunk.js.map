{"version":3,"sources":["assets/imgs/undraw_page_not_found_su7k.svg","assets/imgs/undraw_version_control_9bpv.svg","components/Errors/UnknownPath.jsx","firebase-config/firebaseConfig.js","components/Project list/NoProjects.jsx","components/Project list/OSPList.jsx","components/Main/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","UnknownPath","className","src","errorIMG","alt","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","button","margin","spacing","width","centeredEmptyListMessage","display","alignItems","flexDirection","modal","justifyContent","paper","backgroundColor","palette","background","padding","db","firestore","NoProjects","classes","React","useState","open","setOpen","type","onClick","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","Button","variant","color","size","startIcon","console","log","collection","add","data1","link","age","then","success","catch","error","OSPList","props","datas","length","root","flexGrow","menuButton","marginRight","title","main_body_section","marginTop","marginBottom","main_img_container","position","breakpoints","only","fontSize","main_intro_text","top","main_intro_img","sectionTitle_main_content","main_content_title","Main","anchorEl","setAnchorEl","setDatas","Boolean","handleClose","useEffect","get","data","newState","forEach","doc","a","push","AppBar","Toolbar","IconButton","edge","aria-label","Typography","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","introIMG","App","exact","path","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.da9787a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_page_not_found_su7k.6695af99.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_version_control_9bpv.bd6fb7a3.svg\";","import React from 'react';\nimport \"./errors.css\"\nimport errorIMG from \"../../assets/imgs/undraw_page_not_found_su7k.svg\"\n\nconst UnknownPath = () => {\n    return (\n      <div className=\"page_not_Found_main\">\n           <img src={errorIMG} alt=\"wrongPage\" />\n           <h2>OUPS ! La page que tu recherche n'existe pas !</h2>\n      </div>\n    );\n}\n\nexport default UnknownPath;","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n const firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: \"my-contribution-fa178.firebaseapp.com\",\n  databaseURL: \"https://my-contribution-fa178.firebaseio.com\",\n  projectId: \"my-contribution-fa178\",\n  storageBucket: \"my-contribution-fa178.appspot.com\",\n  messagingSenderId: \"394502965932\",\n  appId: \"1:394502965932:web:ffe012a24d3f9f3a8f2d09\",\n  measurementId: \"G-549XSR6D0K\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { makeStyles } from '@material-ui/core/styles';\nimport firebase from \"../../firebase-config/firebaseConfig\"\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n        width: \"20%\"\n    },\n    centeredEmptyListMessage: {\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\",\n        flexDirection: \"column\"\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\nconst db = firebase.firestore()\n\nconst NoProjects = () => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleButtonClick = () => {\n        console.log(\"CLIIIICK\")\n        db.collection('repos').add({\n            data1: \"i am a DATA\",\n            link: \"iamalink.com\",\n            age: 30\n        }).then(\n            (success) => {\n                console.log(\"Datas successfully added => id = \", success.id)\n            }\n        ).catch(function (error) {\n            console.error(\"Error adding document: \", error);\n        });\n    }\n\n\n    return (\n        <div className={classes.centeredEmptyListMessage}>\n             <button type=\"button\" onClick={handleOpen}>\n        react-transition-group\n      </button>\n             <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Transition modal</h2>\n            <p id=\"transition-modal-description\">react-transition-group animates me.</p>\n          </div>\n        </Fade>\n      </Modal>\n            <h2>Oops, Our dataBase seems to be empty,\n        It may just be temporary</h2>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                className={classes.button}\n                startIcon={<SaveIcon />}\n                onClick={() => { handleButtonClick() }}\n            >\n                Add a new project to our dataBase\n      </Button>\n        </div>\n    );\n}\n\nexport default NoProjects;","import React from 'react';\n\n\nimport NoProjects from './NoProjects';\n\n\n  \n\nconst OSPList = (props) => {\n   \nconsole.log(props.datas.length)\n    return (\n        <div>\n            {\n            props.datas.length < 1 ?  <NoProjects /> : <h1>test</h1>\n        }\n        </div>\n    );\n}\n\nexport default OSPList;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport \"./main.css\"\nimport introIMG from \"../../assets/imgs/undraw_version_control_9bpv.svg\"\n\nimport OSPList from '../Project list/OSPList';\nimport firebase from \"../../firebase-config/firebaseConfig\"\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    main_body_section: {\n        marginTop: \"5%\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        marginBottom: \"30px\"\n    },\n    main_img_container: {\n        position: \"relative\", display: \"flex\", justifyContent: \"center\", width: \"30%\", [theme.breakpoints.only('xs')]: {\n            fontSize: \"0.9em\",\n            width: \"70%\"\n        },\n    },\n    main_intro_text: { position: \"absolute\", top: \"25%\" },\n    main_intro_img: {\n        width: \"100%\"\n    },\n    sectionTitle_main_content: {\n        width: \"100%\",\n        backgroundColor: \"#3F51B5\"\n    },\n    main_content_title: {\n        padding: \"10px\",\n        color: \"white\"\n    }\n}));\nconst db = firebase.firestore()\n\n\nexport default function Main() {\n    const classes = useStyles();\n    const auth = true\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [datas, setDatas] = useState([])\n    const open = Boolean(anchorEl);\n\n    const handleMenu = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n\n    useEffect(() => {\n        if (datas.length < 1) {\n            db.collection(\"repos\").get().then((data) => {\n                let newState = []\n                data.forEach(async (doc) => {\n                    console.log(\"Data received: \" , doc.data())\n                    newState.push(doc.data())\n                })\n                setDatas(newState)\n            })\n        }\n    })\n    console.log(datas)\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        My contribution\n          </Typography>\n                    {auth && (\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <AccountCircle />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={open}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\n                            </Menu>\n                        </div>\n                    )}\n                </Toolbar>\n            </AppBar>\n            <section className={classes.main_body_section}>\n                <div id=\"main_div_img_container\" className={classes.main_img_container}>\n                    <img id=\"main_intro_img\" className={classes.main_intro_img} src={introIMG} alt=\"versioning-img\" />\n                    <h2 className={classes.main_intro_text}>Ne cherchez plus de projets, vous venez de les trouver</h2>\n                </div>\n            </section>\n            <section>\n                <div className={classes.sectionTitle_main_content}>\n                    <h2 className={classes.main_content_title}>Open source projects</h2>\n                </div>\n                <OSPList datas={datas} />\n            </section>\n        </div>);\n}","import React from 'react';\nimport './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport UnknownPath from './components/Errors/UnknownPath';\nimport Main from './components/Main/Main';\n\n\n\n\n\n\nfunction App() {\n  console.log(process.env.PUBLIC_URL)\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={\"/\"}>\n        <Main />\n        </Route>\n        <Route  path={\"/*\"}>\n        <UnknownPath />\n        </Route>\n      </Switch>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}